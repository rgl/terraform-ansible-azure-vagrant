- hosts: all
  name: Example
  gather_facts: yes
  become: yes
  tasks:
    #
    # ensure cloud-init is finished.

    - name: Ensure cloud-init is finished
      command: cloud-init status --wait
      changed_when: false

    #
    # ensure the data disk is initialized.
    # NB to re-test this block use following commands to wipe/delete
    #    all the filesystems and partitions/labels:
    #       umount /data; wipefs --all $(ls -1 /dev/sdc* | grep -E '[0-9]+$') /dev/sdc; sed -i -E '/^\/dev\/sdc.+/d' /etc/fstab

    - name: Ensure the data disk is initialized
      block:
        - name: Partition the data disk
          community.general.parted:
            device: /dev/sdc
            number: 1
            label: gpt
            name: data
            state: present
        - name: Create the data filesystem
          community.general.filesystem:
            dev: /dev/sdc1
            fstype: ext4
            opts: -L data
        - name: Mount the data filesystem
          ansible.posix.mount:
            src: /dev/sdc1
            path: /data
            fstype: ext4
            opts: defaults,nodev
            state: mounted

    #
    # ensure node.js 12.x (LTS) is installed.
    # see https://github.com/nodesource/distributions#debmanual

    - name: Ensure node.js is installed
      block:
        - name: Ensure apt-get can use https repositories
          apt:
            name:
              - apt-transport-https
              - gnupg
            state: present
        - name: Ensure node.js repository apt key
          apt_key:
            url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
            state: present
        - name: Ensure node.js repository
          apt_repository:
            repo: deb https://deb.nodesource.com/node_12.x {{ ansible_distribution_release }} main
            mode: 0600
            state: present
        - name: Ensure node.js is installed
          apt:
            name: "nodejs=12.*"
            state: present

    #
    # ensure the application is installed.

    - name: Ensure the application is installed
      block:
        - name: Ensure app group
          group:
            name: app
            system: yes
            state: present
        - name: Ensure app user
          user:
            name: app
            group: app
            groups: app
            home: /opt/app
            create_home: no
            password_lock: yes
            shell: /usr/sbin/nologin
            system: yes
            state: present
        - name: Ensure app installation directory
          file:
            path: /opt/app
            owner: root
            group: app
            mode: 0750
            state: directory
        - name: Ensure app binaries
          copy:
            src: app/{{ item }}
            dest: /opt/app
            owner: root
            group: root
            mode: 0444
          loop:
            - main.js
            - package.json
          notify:
            - start app service
        - name: Ensure app service unit
          copy:
            src: app/app.service
            dest: /etc/systemd/system
            owner: root
            group: root
            mode: 0444
          notify:
            - start app service

  handlers:
    - name: start app service
      systemd:
        name: app
        state: restarted
        enabled: yes
